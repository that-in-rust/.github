Ideating libraries to rewrite in Rust under PMHLRRY Pradhan Mantri Har Library Rust Rewrite Yojna

Go to Rust 
- A good library for web scraping & crawling, a rewrite of https://github.com/gocolly/colly

Java to Rust
- Caffeine - A high-performance, in-memory caching library for Java
- Joda-Time - A date and time library for Java
- Joda-Money - A money and currency library for Java
- Resilience4j - Lightweight fault tolerance library
- JGraphT - Graph theory algorithms and data structures
- Retrofit - Type-safe HTTP client with annotation-based API
- AssertJ - Fluent assertions with rich failure messages
- Jimfs - In-memory file system implementation
- ModelMapper - Object mapping that doesn't require configuration
- Failsafe - Circuit breaking and retry policies
- Thumbnailator - Simple, efficient image manipulation library



JavaScript to Rust
- A generic library for general helpers like slice, map, channels like lodash which actually enables functional programming patterns in Rust. Think of it as a utility belt that makes common operations more concise. Imagine you're working with collections in Rust - this library would provide simple, chainable methods to transform data. For example, instead of writing verbose iterator chains, you could use intuitive methods like `.map()`, `.filter()`, and `.reduce()` that work consistently across different collection types. The key insight is that while Rust already has powerful iterators, a lodash-like library would provide a more approachable, consistent API that feels familiar to developers coming from JavaScript, making the transition to Rust smoother while maintaining Rust's performance and safety guarantees.
